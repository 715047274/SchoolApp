// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolApp.WebApi.Configurations;

#nullable disable

namespace SchoolApp.WebApi.Migrations
{
    [DbContext(typeof(SchoolAppContext))]
    [Migration("20220505040359_CreateCourse")]
    partial class CreateCourse
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("EnrollmentCourseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentsStudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EnrollmentCourseId", "StudentsStudentId");

                    b.HasIndex("StudentsStudentId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("SchoolApp.WebApi.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CourseId");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseName = "MATH"
                        },
                        new
                        {
                            CourseId = 2,
                            CourseName = "MicroEconomic"
                        },
                        new
                        {
                            CourseId = 3,
                            CourseName = "Computer Science"
                        });
                });

            modelBuilder.Entity("SchoolApp.WebApi.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Email = "alice@gmail.com",
                            Name = "Alice"
                        },
                        new
                        {
                            StudentId = 2,
                            Email = "bob@outlook.com",
                            Name = "Bob"
                        });
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("SchoolApp.WebApi.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("EnrollmentCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolApp.WebApi.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
